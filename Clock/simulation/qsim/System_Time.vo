// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "10/11/2018 18:55:08"

// 
// Device: Altera EP2C20F484C7 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module clock (
	A,
	S,
	R,
	Q);
input 	[3:0] A;
input 	S;
input 	R;
output 	[3:0] Q;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \S~combout ;
wire \R~combout ;
wire \lab1|Q~regout ;
wire \lab2|Q~regout ;
wire \lab3|Q~regout ;
wire \lab4|Q~regout ;
wire [3:0] \A~combout ;


cycloneii_io \S~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\S~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(S));
// synopsys translate_off
defparam \S~I .input_async_reset = "none";
defparam \S~I .input_power_up = "low";
defparam \S~I .input_register_mode = "none";
defparam \S~I .input_sync_reset = "none";
defparam \S~I .oe_async_reset = "none";
defparam \S~I .oe_power_up = "low";
defparam \S~I .oe_register_mode = "none";
defparam \S~I .oe_sync_reset = "none";
defparam \S~I .operation_mode = "input";
defparam \S~I .output_async_reset = "none";
defparam \S~I .output_power_up = "low";
defparam \S~I .output_register_mode = "none";
defparam \S~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \A[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\A~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(A[0]));
// synopsys translate_off
defparam \A[0]~I .input_async_reset = "none";
defparam \A[0]~I .input_power_up = "low";
defparam \A[0]~I .input_register_mode = "none";
defparam \A[0]~I .input_sync_reset = "none";
defparam \A[0]~I .oe_async_reset = "none";
defparam \A[0]~I .oe_power_up = "low";
defparam \A[0]~I .oe_register_mode = "none";
defparam \A[0]~I .oe_sync_reset = "none";
defparam \A[0]~I .operation_mode = "input";
defparam \A[0]~I .output_async_reset = "none";
defparam \A[0]~I .output_power_up = "low";
defparam \A[0]~I .output_register_mode = "none";
defparam \A[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \R~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\R~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(R));
// synopsys translate_off
defparam \R~I .input_async_reset = "none";
defparam \R~I .input_power_up = "low";
defparam \R~I .input_register_mode = "none";
defparam \R~I .input_sync_reset = "none";
defparam \R~I .oe_async_reset = "none";
defparam \R~I .oe_power_up = "low";
defparam \R~I .oe_register_mode = "none";
defparam \R~I .oe_sync_reset = "none";
defparam \R~I .operation_mode = "input";
defparam \R~I .output_async_reset = "none";
defparam \R~I .output_power_up = "low";
defparam \R~I .output_register_mode = "none";
defparam \R~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_ff \lab1|Q (
	.clk(\S~combout ),
	.datain(\A~combout [0]),
	.sdata(gnd),
	.aclr(\R~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\lab1|Q~regout ));

cycloneii_io \A[1]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\A~combout [1]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(A[1]));
// synopsys translate_off
defparam \A[1]~I .input_async_reset = "none";
defparam \A[1]~I .input_power_up = "low";
defparam \A[1]~I .input_register_mode = "none";
defparam \A[1]~I .input_sync_reset = "none";
defparam \A[1]~I .oe_async_reset = "none";
defparam \A[1]~I .oe_power_up = "low";
defparam \A[1]~I .oe_register_mode = "none";
defparam \A[1]~I .oe_sync_reset = "none";
defparam \A[1]~I .operation_mode = "input";
defparam \A[1]~I .output_async_reset = "none";
defparam \A[1]~I .output_power_up = "low";
defparam \A[1]~I .output_register_mode = "none";
defparam \A[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_ff \lab2|Q (
	.clk(\S~combout ),
	.datain(\A~combout [1]),
	.sdata(gnd),
	.aclr(\R~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\lab2|Q~regout ));

cycloneii_io \A[2]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\A~combout [2]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(A[2]));
// synopsys translate_off
defparam \A[2]~I .input_async_reset = "none";
defparam \A[2]~I .input_power_up = "low";
defparam \A[2]~I .input_register_mode = "none";
defparam \A[2]~I .input_sync_reset = "none";
defparam \A[2]~I .oe_async_reset = "none";
defparam \A[2]~I .oe_power_up = "low";
defparam \A[2]~I .oe_register_mode = "none";
defparam \A[2]~I .oe_sync_reset = "none";
defparam \A[2]~I .operation_mode = "input";
defparam \A[2]~I .output_async_reset = "none";
defparam \A[2]~I .output_power_up = "low";
defparam \A[2]~I .output_register_mode = "none";
defparam \A[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_ff \lab3|Q (
	.clk(\S~combout ),
	.datain(\A~combout [2]),
	.sdata(gnd),
	.aclr(\R~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\lab3|Q~regout ));

cycloneii_io \A[3]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\A~combout [3]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(A[3]));
// synopsys translate_off
defparam \A[3]~I .input_async_reset = "none";
defparam \A[3]~I .input_power_up = "low";
defparam \A[3]~I .input_register_mode = "none";
defparam \A[3]~I .input_sync_reset = "none";
defparam \A[3]~I .oe_async_reset = "none";
defparam \A[3]~I .oe_power_up = "low";
defparam \A[3]~I .oe_register_mode = "none";
defparam \A[3]~I .oe_sync_reset = "none";
defparam \A[3]~I .operation_mode = "input";
defparam \A[3]~I .output_async_reset = "none";
defparam \A[3]~I .output_power_up = "low";
defparam \A[3]~I .output_register_mode = "none";
defparam \A[3]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_ff \lab4|Q (
	.clk(\S~combout ),
	.datain(\A~combout [3]),
	.sdata(gnd),
	.aclr(\R~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\lab4|Q~regout ));

cycloneii_io \Q[0]~I (
	.datain(\lab1|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Q[0]));
// synopsys translate_off
defparam \Q[0]~I .input_async_reset = "none";
defparam \Q[0]~I .input_power_up = "low";
defparam \Q[0]~I .input_register_mode = "none";
defparam \Q[0]~I .input_sync_reset = "none";
defparam \Q[0]~I .oe_async_reset = "none";
defparam \Q[0]~I .oe_power_up = "low";
defparam \Q[0]~I .oe_register_mode = "none";
defparam \Q[0]~I .oe_sync_reset = "none";
defparam \Q[0]~I .operation_mode = "output";
defparam \Q[0]~I .output_async_reset = "none";
defparam \Q[0]~I .output_power_up = "low";
defparam \Q[0]~I .output_register_mode = "none";
defparam \Q[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Q[1]~I (
	.datain(\lab2|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Q[1]));
// synopsys translate_off
defparam \Q[1]~I .input_async_reset = "none";
defparam \Q[1]~I .input_power_up = "low";
defparam \Q[1]~I .input_register_mode = "none";
defparam \Q[1]~I .input_sync_reset = "none";
defparam \Q[1]~I .oe_async_reset = "none";
defparam \Q[1]~I .oe_power_up = "low";
defparam \Q[1]~I .oe_register_mode = "none";
defparam \Q[1]~I .oe_sync_reset = "none";
defparam \Q[1]~I .operation_mode = "output";
defparam \Q[1]~I .output_async_reset = "none";
defparam \Q[1]~I .output_power_up = "low";
defparam \Q[1]~I .output_register_mode = "none";
defparam \Q[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Q[2]~I (
	.datain(\lab3|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Q[2]));
// synopsys translate_off
defparam \Q[2]~I .input_async_reset = "none";
defparam \Q[2]~I .input_power_up = "low";
defparam \Q[2]~I .input_register_mode = "none";
defparam \Q[2]~I .input_sync_reset = "none";
defparam \Q[2]~I .oe_async_reset = "none";
defparam \Q[2]~I .oe_power_up = "low";
defparam \Q[2]~I .oe_register_mode = "none";
defparam \Q[2]~I .oe_sync_reset = "none";
defparam \Q[2]~I .operation_mode = "output";
defparam \Q[2]~I .output_async_reset = "none";
defparam \Q[2]~I .output_power_up = "low";
defparam \Q[2]~I .output_register_mode = "none";
defparam \Q[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Q[3]~I (
	.datain(\lab4|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Q[3]));
// synopsys translate_off
defparam \Q[3]~I .input_async_reset = "none";
defparam \Q[3]~I .input_power_up = "low";
defparam \Q[3]~I .input_register_mode = "none";
defparam \Q[3]~I .input_sync_reset = "none";
defparam \Q[3]~I .oe_async_reset = "none";
defparam \Q[3]~I .oe_power_up = "low";
defparam \Q[3]~I .oe_register_mode = "none";
defparam \Q[3]~I .oe_sync_reset = "none";
defparam \Q[3]~I .operation_mode = "output";
defparam \Q[3]~I .output_async_reset = "none";
defparam \Q[3]~I .output_power_up = "low";
defparam \Q[3]~I .output_register_mode = "none";
defparam \Q[3]~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
